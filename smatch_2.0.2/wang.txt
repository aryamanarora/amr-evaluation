# ::id 1
# ::snt Then you will say to them , ' Yes , the stars always make me laugh ! ' And they will think you are crazy .
(x19 / and
	:op1 (x4 / say-01
		:time (x1 / then)
		:ARG0 (x2 / you))
	:op2 (x14 / make-01
		:ARG1 (x12 / star)
		:time (x13 / always)
		:ARG1 (x16 / laugh))
	:op2 (x22 / think-01
		:ARG0 x2
		:ARG1 (x25 / crazy)))

# ::id 2
# ::snt It will be a very shabby trick that I shall have played on you ... "
(x7 / trick
	:mod (x6 / shabby
		:degree (x5 / very))
	:ARG1-of (x12 / play-02
		:ARG1 (x14 / you)))

# ::id 3
# ::snt And he laughed again .
(x1 / and
	:op1 (x3 / laugh
		:mod (x4 / again)))

# ::id 4
# ::snt " It will be as if , in place of the stars , I had given you a great number of little bells that knew how to laugh ... "
(x16 / give-01
	:location (x9 / place
		:ARG1 (x12 / star))
	:ARG1 (x23 / bell
		:quant (x20 / number
			:mod (x19 / great))
		:mod (x22 / little)
		:ARG0-of (x25 / know-01
			:ARG1 (x28 / laugh))))

# ::id 5
# ::snt And he laughed again .
(x1 / and
	:op1 (x3 / laugh
		:mod (x4 / again)))

# ::id 6
# ::snt Then he quickly became serious : " Tonight - - you know ... do not come , " said the little prince .
(x19 / say-01
	:ARG1 (x16 / come-01
		:condition (x4 / become-01
			:mod (x5 / serious
				:mod (x3 / quick)))
		:time (x8 / date-entity)
		:ARG1 (x12 / know-01))
	:ARG0 (x22 / prince
		:degree (x21 / little)))

# ::id 7
# ::snt " I shall not leave you , "
(x5 / leave-01
	:ARG1 (x6 / you))

# ::id 8
# ::snt I said .
(x2 / say-01
	:ARG0 (x1 / i))

# ::id 9
# ::snt " I shall look as if I were suffering .
(x4 / look-01
	:time (x9 / suffer-01))

# ::id 10
# ::snt I shall look a little as if I were dying .
(x3 / look-01
	:ARG1 (x5 / little)
	:ARG1 (x10 / die-01))

# ::id 11
# ::snt It is like that .
(x / xconcept)

# ::id 12
# ::snt Do not come to see that .
(x3 / come-01
	:purpose (x5 / see-01))

# ::id 13
# ::snt It is not worth the trouble ... "
(x6 / trouble)

# ::id 14
# ::snt " I shall not leave you . "
(x5 / leave-01
	:ARG1 (x6 / you))

# ::id 15
# ::snt But he was worried .
(x1 / contrast-01
	:ARG1 (x4 / worry-02))

# ::id 16
# ::snt " I tell you - - it is also because of the snake .
(x3 / tell-01
	:ARG1 (x4 / you)
	:ARG1-of (x10 / cause-01
		:mod (x9 / also)
		:ARG0 (x13 / snake)))

# ::id 17
# ::snt He must not bite you .
(x4 / bite
	:ARG0 (x1 / he)
	:ARG1 (x5 / you))

# ::id 18
# ::snt Snakes - - they are malicious creatures .
(x7 / creature
	:ARG0 (x1 / snake)
	:mod (x6 / malicious))

# ::id 19
# ::snt This one might bite you just for fun ... "
(x4 / bite
	:ARG0 (x2 / one
		:mod (x1 / this))
	:ARG1 (x5 / you)
	:ARG2 (x8 / fun
		:mod (x6 / just)))

# ::id 20
# ::snt " I shall not leave you . "
(x5 / leave-01
	:ARG1 (x6 / you))

# ::id 21
# ::snt But a thought came to reassure him : " It is true that they have no more poison for a second bite . "
(x1 / contrast-01
	:ARG1 (x12 / true
		:domain (x3 / thought
			:ARG1-of (x4 / come-01
				:ARG2 (x6 / reassure)))
		:domain (x15 / have-03
			:ARG1 (x18 / poison
				:polarity -
				:mod (x17 / more)
				:subset-of (x22 / bite
					:duration (x21 / temporal-quantity
						:unit (s / second)))))))

# ::id 22
# ::snt That night I did not see him set out on his way .
(x6 / see-01
	:time (x2 / night)
	:ARG1 (x8 / set-05
		:prep-in (x12 / way)))

# ::id 23
# ::snt He got away from me without making a sound .
(x2 / get-01
	:ARG0 (x1 / he)
	:manner (x3 / away)
	:ARG1 (x7 / make-01
		:ARG1 (x9 / sound)))

# ::id 24
# ::snt When I succeeded in catching up with him he was walking along with a quick and resolute step .
(x11 / walk-01
	:time (x3 / succeed-01
		:manner (x5 / catch-04))
	:location (x12 / along)
	:ARG2 (x18 / step
		:ARG1 (x16 / and
			:op1 (x15 / quick)
			:op2 (x17 / resolute))))

# ::id 25
# ::snt He said to me merely : " Ah !
(x2 / say-01
	:ARG0 (x1 / he)
	:ARG1 (x4 / i)
	:time (x5 / mere)
	:ARG1 (x8 / ah))

# ::id 26
# ::snt You are there ... "
(x1 / you)

# ::id 27
# ::snt And he took me by the hand .
(x1 / and
	:op1 (x3 / take-01
		:ARG2 (x7 / hand)))

# ::id 28
# ::snt But he was still worrying .
(x1 / contrast-01
	:ARG1 (x5 / worry-02
		:mod (x4 / still)))

# ::id 29
# ::snt " It was wrong of you to come .
(x6 / you
	:ARG1 (x8 / come-01))

# ::id 30
# ::snt You will suffer .
(x3 / suffer-01
	:ARG0 (x1 / you))

# ::id 31
# ::snt I shall look as if I were dead ; and that will not be true ... "
(x / xconcept
	:x (x9 / and
		:op2 (x8 / dead)
		:op1 (x10 / and
			:op1 (x3 / look-01))
		:op2 (x15 / true)))

# ::id 32
# ::snt I said nothing .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / nothing))

# ::id 33
# ::snt " You understand ... it is too far .
(x3 / understand-01
	:ARG0 (x2 / you)
	:time (x8 / far
		:degree (x7 / too)))

# ::id 34
# ::snt I can not carry this body with me .
(x2 / possible
	:domain (x4 / carry-01
		:ARG1 (x6 / body
			:mod (x5 / this))
		:ARG2 (x8 / i)))

# ::id 35
# ::snt It is too heavy . "
(x4 / heavy
	:degree (x3 / too))

# ::id 36
# ::snt I said nothing .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / nothing))

# ::id 37
# ::snt " But it will be like an old abandoned shell .
(x2 / contrast-01
	:ARG2 (x10 / shell
		:mod (x8 / old)
		:ARG1-of (x9 / abandon-01)))

# ::id 38
# ::snt There is nothing sad about old shells ... "
(x3 / nothing
	:mod (x4 / sad
		:compared-to (x7 / shell
			:mod (x6 / old))))

# ::id 39
# ::snt I said nothing .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / nothing))

# ::id 40
# ::snt He was a little discouraged .
(x5 / discourage
	:ARG0 (x1 / he)
	:degree (x4 / little))

# ::id 41
# ::snt But he made one more effort : " You know , it will be very nice .
(x1 / contrast-01
	:ARG1 (x6 / effort
		:quant 1
		:mod (x5 / more))
	:ARG2 (x16 / nice
		:condition (x10 / know-01)
		:degree (x15 / very)))

# ::id 42
# ::snt I , too , shall look at the stars .
(x6 / look-01
	:time (x3 / too)
	:location (x9 / star))

# ::id 43
# ::snt All the stars will be wells with a rusty pulley .
(x6 / well
	:ARG0 (x3 / star
		:quant (x1 / all))
	:accompanier (x10 / pulley
		:mod (x9 / rusty)))

# ::id 44
# ::snt All the stars will pour out fresh water for me to drink ... "
(x5 / pour-01
	:ARG0 (x3 / star
		:quant (x1 / all))
	:ARG1 (x8 / water
		:mod (x7 / fresh)
		:ARG1 (x12 / thing
			:ARG1-of (d / drink))))

# ::id 45
# ::snt I said nothing .
(x2 / say-01
	:ARG0 (x1 / i)
	:ARG1 (x3 / nothing))

# ::id 46
# ::snt " That will be so amusing !
(x6 / amusing
	:degree (x5 / so))

# ::id 47
# ::snt You will have five hundred million little bells , and I shall have five hundred million springs of fresh water ... "
(x10 / and
	:op1 (x3 / have-03
		:ARG1 (x8 / bell
			:mod (x7 / little)))
	:op2 (x13 / have-03
		:ARG1 (x17 / spring
			:quant (x15 / hundreds))
		:ARG2 (x20 / water
			:mod (x19 / fresh))))

# ::id 48
# ::snt And he too said nothing more , because he was crying ...
(x1 / and
	:op1 (x4 / say-01
		:manner (x3 / too)
		:ARG1 (x6 / more
			:mod (x5 / nothing))
		:ARG1 (x11 / cry
			:ARG1-of (x8 / cause-01))))

# ::id 49
# ::snt " Here it is .
(x2 / here)

# ::id 50
# ::snt Let me go on by myself . "
(x1 / let-01
	:ARG1 (x3 / go-01
		:ARG0 (x6 / myself)))

# ::id 51
# ::snt And he sat down , because he was afraid .
(x1 / and
	:op1 (x3 / sit-02
		:direction (x4 / down)
		:ARG1-of (x6 / cause-01
			:ARG0 (x9 / afraid))))

# ::id 52
# ::snt Then he said , again : " You know - - my flower ...
(x3 / say-01
	:time (x1 / then)
	:time (x5 / again)
	:ARG1 (x9 / know-01
		:ARG1 (x13 / flower)))

# ::id 53
# ::snt I am responsible for her .
(x3 / responsible-41)

# ::id 54
# ::snt And she is so weak !
(x1 / and
	:op1 (x5 / weak
		:degree (x4 / so)))

# ::id 55
# ::snt She is so naïve !
(x4 / naïve
	:degree (x3 / so))

# ::id 56
# ::snt She has four thorns , of no use at all , to protect herself against all the world ... "
(x2 / have-03
	:ARG1 (x4 / thorn
		:quant 4
		:ARG1 (x8 / use-01
			:polarity -
			:quant (x10 / all))
		:purpose (x13 / protect-01
			:ARG2 (x18 / world
				:quant (x16 / all)))))

# ::id 57
# ::snt I too sat down , because I was not able to stand up any longer .
(x3 / sit-02
	:manner (x2 / too)
	:direction (x4 / down)
	:ARG1-of (x6 / cause-01
		:ARG0 (x10 / possible
			:domain (x12 / stand-07
				:manner (x15 / longer
					:mod (x14 / any))))))

# ::id 58
# ::snt " There now - - that is all ... "
(x8 / all
	:time (x3 / now))

# ::id 59
# ::snt He still hesitated a little ; then he got up .
(x / xconcept
	:x (x6 / and
		:op2 (x3 / hesitate-01
			:ARG0 (x1 / he)
			:mod (x2 / still)
			:ARG1 (x5 / little))
		:op2 (x7 / then)
		:op2 (x9 / get-01)))

# ::id 60
# ::snt He took one step .
(x2 / take-01
	:ARG1 (x4 / step
		:quant 1))

# ::id 61
# ::snt I could not move .
(x2 / possible
	:domain (x4 / move-01))

# ::id 62
# ::snt There was nothing but a flash of yellow close to his ankle .
(x4 / contrast-01
	:ARG2 (x3 / nothing)
	:ARG2 (x6 / flash
		:mod (x8 / yellow)
		:ARG1 (x9 / close-41
			:ARG2 (x12 / ankle))))

# ::id 63
# ::snt He remained motionless for an instant .
(x2 / remain-01
	:ARG1 (x1 / he)
	:ARG3 (x3 / motionless)
	:ARG3 (x6 / instant))

# ::id 64
# ::snt He did not cry out .
(x4 / cry
	:ARG0 (x1 / he))

# ::id 65
# ::snt He fell as gently as a tree falls .
(x2 / fall-09
	:ARG0 (x1 / he)
	:time (x4 / gently)
	:time (x8 / fall-09
		:ARG1 (x7 / tree)))

# ::id 66
# ::snt There was not even any sound , because of the sand .
(x6 / sound
	:mod (x4 / even)
	:mod (x5 / any)
	:ARG1-of (x8 / cause-01
		:ARG0 (x11 / sand)))

# ::id 67
# ::snt Chapter 27 .
(x1 / military
	:name (n / name
		:op1 "Chapter")
	:quant (x2 / 27))

# ::id 68
# ::snt And now six years have already gone by ...
(x1 / and
	:op1 (x7 / go-01
		:time (x2 / now)
		:duration (x4 / temporal-quantity
			:unit (y / years)
			:quant 6)
		:time (x6 / already)))

# ::id 69
# ::snt I have never yet told this story .
(x5 / tell-01
	:time (x4 / yet)
	:ARG2 (x7 / story
		:mod (x6 / this)))

# ::id 70
# ::snt The companions who met me on my return were well content to see me alive .
(x11 / content
	:domain (x2 / companion
		:ARG0-of (x4 / meet-03
			:ARG1 (x8 / return-01)))
	:degree (x10 / well)
	:domain (x13 / see-01
		:ARG1 (x15 / alive)))

# ::id 71
# ::snt I was sad , but I told them : " I am tired . "
(x5 / contrast-01
	:ARG1 (x3 / sad)
	:ARG2 (x7 / tell-01)
	:ARG2 (x13 / tire))

# ::id 72
# ::snt Now my sorrow is comforted a little .
(x5 / comfort
	:time (x1 / now)
	:ARG1 (x3 / sorrow)
	:ARG1 (x7 / little))

# ::id 73
# ::snt That is to say - - not entirely .
(x4 / say-01
	:ARG1 (x8 / entire))

# ::id 74
# ::snt But I know that he did go back to his planet , because I did not find his body at daybreak .
(x1 / contrast-01
	:ARG1 (x3 / know-01
		:ARG1 (x7 / go-01
			:direction (x8 / back)
			:ARG2 (x11 / planet)
			:ARG1-of (x13 / cause-01
				:ARG0 (x17 / find-01
					:ARG1 (x19 / body)
					:time (x21 / date-entity))))))

# ::id 75
# ::snt It was not such a heavy body ... and at night I love to listen to the stars .
(x9 / and
	:op1 (x7 / body
		:mod (x4 / such)
		:mod (x6 / heavy))
	:op2 (x13 / love
		:time (x11 / night)
		:ARG1 (x15 / listen
			:ARG1 (x18 / star))))

# ::id 76
# ::snt It is like five hundred million little bells ...
(x8 / bell
	:mod (x7 / little))

# ::id 77
# ::snt But there is one extraordinary thing ... when I drew the muzzle for the little prince , I forgot to add the leather strap to it .
(x1 / contrast-01
	:ARG1 (x6 / thing
		:quant 1
		:mod (x5 / extraordinary))
	:ARG2 (x19 / forget
		:time (x10 / draw-03
			:ARG1 (x12 / muzzle)
			:ARG2 (x16 / prince
				:mod (x15 / little)))
		:ARG1 (x21 / add-01
			:ARG1 (x24 / strap
				:mod (x23 / leather)))))

# ::id 78
# ::snt He will never have been able to fasten it on his sheep .
(x6 / possible
	:domain (x1 / he)
	:domain (x8 / fasten
		:ARG2 (x12 / sheep)))

# ::id 79
# ::snt So now I keep wondering : what is happening on his planet ?
(x4 / keep-05
	:time (x2 / now)
	:ARG1 (x5 / wonder-01
		:ARG1 (x9 / happen-01
			:ARG1 (x12 / planet))))

# ::id 80
# ::snt Perhaps the sheep has eaten the flower ...
(x5 / eat-01
	:time (x1 / perhaps)
	:ARG0 (x3 / sheep)
	:ARG1 (x7 / flower))

# ::id 81
# ::snt At one time I say to myself : " Surely not !
(x5 / say-01
	:ARG1 (x3 / time
		:quant 1)
	:ARG1 (x7 / myself)
	:ARG1 (x11 / meet-01
		:mod (x10 / surely)))

# ::id 82
# ::snt The little prince shuts his flower under her glass globe every night , and he watches over his sheep very carefully ... "
(x14 / and
	:op1 (x4 / shut-05
		:ARG0 (x3 / prince
			:degree (x2 / little))
		:ARG1 (x6 / flower)
		:ARG2 (x10 / globe
			:mod (x9 / glass)))
	:op2 (x16 / watch-01
		:ARG1 (x19 / sheep)
		:manner (x21 / careful
			:degree (x20 / very))))

# ::id 83
# ::snt Then I am happy .
(x4 / happy
	:time (x1 / then))

# ::id 84
# ::snt And there is sweetness in the laughter of all the stars .
(x1 / and
	:op1 (x4 / sweetness
		:location (x7 / laughter
			:ARG1 (x11 / star
				:quant (x9 / all)))))

# ::id 85
# ::snt But at another time I say to myself : " At some moment or other one is absent - minded , and that is enough !
(x1 / contrast-01
	:ARG1 (x6 / say-01
		:ARG1 (x4 / time
			:mod (x3 / another))
		:ARG1 (x8 / myself)
		:ARG1 (x13 / moment
			:mod (x12 / some))
		:ARG1 (x14 / or)
		:ARG1 (x22 / and
			:op2 (x20 / mind-02
				:null_edge (x15 / other
					:null_edge 1)
				:mod (x18 / absent))
			:op2 (x25 / enough))))

# ::id 86
# ::snt On some one evening he forgot the glass globe , or the sheep got out , without making any noise , in the night ... "
(x11 / or
	:op1 (x6 / forget
		:time (x4 / evening
			:null_edge (x2 / some)
			:quant 1)
		:ARG1 (x9 / globe
			:mod (x8 / glass)))
	:op2 (x14 / get-01
		:ARG0 (x13 / sheep)
		:ARG2 (x18 / make-01
			:ARG1 (x20 / noise
				:mod (x19 / any)))
		:time (x24 / night)))

# ::id 87
# ::snt And then the little bells are changed to tears ...
(x1 / and
	:op1 (x7 / change-02
		:time (x2 / then)
		:ARG1 (x5 / bell
			:mod (x4 / little))
		:ARG2 (x9 / tear-01)))

# ::id 88
# ::snt Here , then , is a great mystery .
(x8 / mystery
	:location (x1 / here)
	:time (x3 / then)
	:mod (x7 / great))

# ::id 89
# ::snt For you who also love the little prince , and for me , nothing in the universe can be the same if somewhere , we do not know where , a sheep that we never saw has - - yes or no ? -- eaten a rose ...
(x18 / possible
	:domain (x21 / same-41
		:ARG2 (x2 / you
			:ARG0-of (x5 / love
				:mod (x4 / also)
				:ARG1 (x8 / prince
					:degree (x7 / little)))
			:ARG1 (x10 / and))
		:domain (x14 / nothing
			:location (x17 / universe))
		:condition (x28 / know-01
			:manner (x23 / somewhere)
			:ARG1 (x37 / have-03
				:ARG0 (x32 / sheep
					:ARG1-of (x36 / see-01))
				:ARG1 (x41 / or
					:op2 (x40 / yes)
					:op2 -)))
		:ARG2 (x47 / rose)))

# ::id 90
# ::snt Look up at the sky .
(x1 / look-01
	:location (x5 / sky))

# ::id 91
# ::snt Ask yourselves : is it yes or no ?
(x1 / ask-02
	:ARG1 (x2 / yourselve)
	:time (x6 / yes
		:op1 (x7 / or
			:op2 -)))

# ::id 92
# ::snt Has the sheep eaten the flower ?
(x4 / eat-01
	:ARG0 (x3 / sheep)
	:ARG1 (x6 / flower))

# ::id 93
# ::snt And you will see how everything changes ...
(x1 / and
	:op1 (x4 / see-01
		:ARG0 (x2 / you)
		:ARG1 (x7 / change-01
			:ARG0 (x6 / everything))))

# ::id 94
# ::snt And no grown - up will ever understand that this is a matter of so much importance !
(x1 / and
	:op1 (x8 / understand-01
		:ARG1 (x3 / grown
			:polarity -
			:mod (x5 / up))
		:manner (x7 / ever)
		:ARG1 (x10 / this
			:mod (x13 / matter
				:ARG1 (x17 / important
					:quant (x16 / much
						:degree (x15 / so)))))))

# ::id 95
# ::snt This is , to me , the loveliest and saddest landscape in the world .
(x11 / landscape
	:domain (x1 / this)
	:ARG2 (x5 / i)
	:ARG1 (x9 / and
		:op1 (x8 / loveliest)
		:op2 (x10 / saddest))
	:location (x14 / world))

# ::id 96
# ::snt It is the same as that on the preceding page , but I have drawn it again to impress it on your memory .
(x12 / contrast-01
	:ARG1 (x4 / same-41)
	:ARG2 (x10 / page
		:ARG0-of (x9 / precede-01))
	:ARG2 (x15 / draw-03
		:mod (x17 / again)
		:purpose (x19 / impress
			:ARG1 (x23 / memory))))

# ::id 97
# ::snt It is here that the little prince appeared on Earth , and disappeared .
(x3 / here
	:ARG1 (x12 / and
		:op1 (x8 / appear-02
			:ARG0 (x7 / prince
				:degree (x6 / little))
			:ARG1 (x10 / planet
				:name (n / name
					:op1 "Earth")))
		:op2 (x13 / disappear-01)))

# ::id 98
# ::snt Look at it carefully so that you will be sure to recognise it in case you travel some day to the African desert .
(x1 / look-01
	:manner (x4 / careful)
	:time (x10 / sure
		:ARG1 (x12 / recognize-02)
		:domain (x17 / travel-01
			:age (x19 / temporal-quantity
				:unit (d / day)
				:quant (x18 / some))
			:ARG1 (x23 / desert
				:name (x22 / name
					:op1 "African")))))

# ::id 99
# ::snt And , if you should come upon this spot , please do not hurry on .
(x5 / recommend-01
	:ARG1 (x1 / and
		:op1 (x14 / hurry
			:ARG1 (x11 / please)))
	:ARG1 (x6 / come-01
		:ARG1 (x9 / spot
			:mod (x8 / this))))

# ::id 100
# ::snt Wait for a time , exactly under the star .
(x1 / wait-01
	:ARG1 (x9 / star
		:mod (x6 / exactly)))

# ::id 101
# ::snt Then , if a little man appears who laughs , who has golden hair and who refuses to answer questions , you will know who he is .
(x24 / know-01
	:time (x1 / then)
	:time (x7 / appear-02
		:ARG1 (x6 / man
			:degree (x5 / little))
		:ARG1 (x15 / and
			:op1 (x9 / laugh)
			:op2 (x12 / have-03
				:ARG1 (x14 / hair
					:mod (x13 / golden)))
			:op2 (x17 / refuse-01
				:ARG1 (x19 / answer-01
					:ARG1 (x20 / question)))))
	:ARG0 (x22 / you))

# ::id 102
# ::snt If this should happen , please comfort me .
(x6 / please
	:ARG1 (x3 / recommend-01
		:ARG1 (x4 / happen-01
			:ARG1 (x2 / this)))
	:ARG1 (x7 / comfort))

# ::id 103
# ::snt Send me word that he has come back .
(x1 / send-03
	:ARG1 (x3 / word
		:ARG1 (x7 / come-01
			:mod (x8 / back))))

